{"/home/guan/Desktop/studies/spring_2021/dti/office-hours/src/utilities/date.ts":{"path":"/home/guan/Desktop/studies/spring_2021/dti/office-hours/src/utilities/date.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":24},"end":{"line":6,"column":67}},"4":{"start":{"line":13,"column":0},"end":{"line":25,"column":2}},"5":{"start":{"line":14,"column":16},"end":{"line":14,"column":42}},"6":{"start":{"line":15,"column":4},"end":{"line":15,"column":33}},"7":{"start":{"line":16,"column":14},"end":{"line":16,"column":38}},"8":{"start":{"line":17,"column":4},"end":{"line":17,"column":31}},"9":{"start":{"line":18,"column":17},"end":{"line":18,"column":19}},"10":{"start":{"line":19,"column":19},"end":{"line":19,"column":51}},"11":{"start":{"line":20,"column":4},"end":{"line":23,"column":5}},"12":{"start":{"line":21,"column":8},"end":{"line":21,"column":57}},"13":{"start":{"line":22,"column":8},"end":{"line":22,"column":32}},"14":{"start":{"line":24,"column":4},"end":{"line":24,"column":18}},"15":{"start":{"line":26,"column":23},"end":{"line":31,"column":1}},"16":{"start":{"line":27,"column":21},"end":{"line":27,"column":52}},"17":{"start":{"line":28,"column":4},"end":{"line":28,"column":30}},"18":{"start":{"line":29,"column":4},"end":{"line":29,"column":25}},"19":{"start":{"line":30,"column":4},"end":{"line":30,"column":22}},"20":{"start":{"line":38,"column":0},"end":{"line":44,"column":2}},"21":{"start":{"line":39,"column":4},"end":{"line":39,"column":31}},"22":{"start":{"line":40,"column":4},"end":{"line":40,"column":26}},"23":{"start":{"line":41,"column":4},"end":{"line":41,"column":42}},"24":{"start":{"line":42,"column":4},"end":{"line":42,"column":38}},"25":{"start":{"line":43,"column":4},"end":{"line":43,"column":34}},"26":{"start":{"line":45,"column":0},"end":{"line":48,"column":2}},"27":{"start":{"line":46,"column":4},"end":{"line":47,"column":73}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":23},"end":{"line":13,"column":24}},"loc":{"start":{"line":13,"column":51},"end":{"line":25,"column":1}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":26,"column":23},"end":{"line":26,"column":24}},"loc":{"start":{"line":26,"column":39},"end":{"line":31,"column":1}},"line":26},"3":{"name":"(anonymous_3)","decl":{"start":{"line":38,"column":20},"end":{"line":38,"column":21}},"loc":{"start":{"line":38,"column":51},"end":{"line":44,"column":1}},"line":38},"4":{"name":"(anonymous_4)","decl":{"start":{"line":45,"column":21},"end":{"line":45,"column":22}},"loc":{"start":{"line":45,"column":91},"end":{"line":48,"column":1}},"line":45}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":46,"column":11},"end":{"line":47,"column":72}},"type":"binary-expr","locations":[{"start":{"line":46,"column":12},"end":{"line":46,"column":42}},{"start":{"line":46,"column":46},"end":{"line":46,"column":78}},{"start":{"line":47,"column":9},"end":{"line":47,"column":37}},{"start":{"line":47,"column":41},"end":{"line":47,"column":71}}],"line":46}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":2,"6":2,"7":2,"8":2,"9":2,"10":2,"11":2,"12":8,"13":8,"14":2,"15":1,"16":4,"17":4,"18":4,"19":4,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0},"f":{"0":1,"1":2,"2":4,"3":0,"4":0},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[0,0,0,0]},"inputSourceMap":{"version":3,"file":"/home/guan/Desktop/studies/spring_2021/dti/office-hours/src/utilities/date.ts","sources":["/home/guan/Desktop/studies/spring_2021/dti/office-hours/src/utilities/date.ts"],"names":[],"mappings":";;;;;AAAA,oEAAqC;AAErC;;;;;GAKG;AACU,QAAA,YAAY,GAAG,UAAC,QAAuB,EAAE,MAAqB;IACvE,IAAM,KAAK,GAAG,gBAAgB,CAAC,QAAQ,CAAC,CAAC;IACzC,KAAK,CAAC,EAAE,CAAC,kBAAkB,CAAC,CAAC;IAC7B,IAAM,GAAG,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC;IACrC,GAAG,CAAC,EAAE,CAAC,kBAAkB,CAAC,CAAC;IAE3B,IAAM,MAAM,GAAG,EAAE,CAAC;IAClB,IAAM,QAAQ,GAAG,yBAAM,CAAC,KAAK,CAAC,CAAC;IAE/B,OAAO,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,EAAC;QAChC,MAAM,CAAC,IAAI,CAAC,yBAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC9B,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;KAC3B;IAED,OAAO,MAAM,CAAC;AAClB,CAAC,CAAA;AAED,IAAM,gBAAgB,GAAG,UAAC,IAAmB;IACzC,IAAM,UAAU,GAAG,yBAAM,CAAC,IAAI,CAAC,CAAC;IAChC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC1B,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACrB,OAAO,UAAU,CAAC;AACtB,CAAC,CAAA;AAED;;;;;GAKG;AACU,QAAA,SAAS,GAAG,UAAC,WAA0B,EAAE,MAAqB;IACvE,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC3B,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACtB,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC;IACtC,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;IAClC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;AAClC,CAAC,CAAA;AAEY,QAAA,UAAU,GAAG,UACtB,cAAoB,EACpB,YAAkB,EAClB,cAAoB,EACpB,YAAkB;IAElB,OAAA,CAAC,cAAc,IAAI,YAAY,IAAI,cAAc,IAAI,cAAc,CAAC;QACpE,CAAC,YAAY,IAAI,YAAY,IAAI,cAAc,IAAI,YAAY,CAAC;AADhE,CACgE,CAAC","sourcesContent":["import moment from 'moment-timezone';\n\n/**\n * getDateRange returns a list of dates beginning from rawStart, increasing each\n * date by 1 week until it reaches a date that is strictly later than rawEnd\n * @param rawStart The date at which the date range begins\n * @param rawEnd The date at which the date range ends\n */\nexport const getDateRange = (rawStart: moment.Moment, rawEnd: moment.Moment): moment.Moment[] => {\n    const start = normalizeSeconds(rawStart);\n    start.tz(\"America/New_York\");\n    const end = normalizeSeconds(rawEnd);\n    end.tz(\"America/New_York\");\n\n    const result = [];\n    const currDate = moment(start);\n\n    while (currDate.isSameOrBefore(end)){\n        result.push(moment(currDate));\n        currDate.add(1, 'week');\n    }\n\n    return result;\n}\n\nconst normalizeSeconds = (date: moment.Moment): moment.Moment => {\n    const normalized = moment(date);\n    normalized.millisecond(0);\n    normalized.second(0);\n    return normalized;\n}\n\n/**\n * syncTimes sets the destination to have milliseconds and seconds set to 0,\n * and have the same minutes, hours and day of week values as source\n * @param destination The date to be synced\n * @param source The date from which syncing values are derived\n */\nexport const syncTimes = (destination: moment.Moment, source: moment.Moment) => {\n    destination.millisecond(0);\n    destination.second(0);\n    destination.minutes(source.minutes());\n    destination.hours(source.hours());\n    destination.day(source.day());\n}\n\nexport const hasOverlap = (\n    interval1Start: Date,\n    interval1End: Date,\n    interval2Start: Date,\n    interval2End: Date\n): boolean =>\n    (interval1Start <= interval2End && interval2Start <= interval1Start) ||\n    (interval1End <= interval2End && interval2Start <= interval1End);\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"92a31a018f9838025bd089383b5c7b959358fa5f"}}